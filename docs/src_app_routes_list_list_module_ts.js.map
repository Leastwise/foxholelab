{"version":3,"file":"src_app_routes_list_list_module_ts.js","mappings":"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","sources":["./src/app/routes/list/list-routing.module.ts","./src/app/routes/list/list.component.ts","./src/app/routes/list/list.component.html","./src/app/routes/list/list.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { ListComponent } from './list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ListComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ListRoutingModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Table } from 'primeng/table';\r\nimport { combineLatest, filter, first, map } from 'rxjs';\r\n\r\nimport {\r\n  Column,\r\n  Dataset,\r\n  Game,\r\n  ItemId,\r\n  Rational,\r\n  RecipeField,\r\n  Step,\r\n  StepDetailTab,\r\n} from '~/models';\r\nimport { ContentService, TrackService } from '~/services';\r\nimport {\r\n  Factories,\r\n  Items,\r\n  LabState,\r\n  Preferences,\r\n  Products,\r\n  Recipes,\r\n  Settings,\r\n} from '~/store';\r\nimport { ExportUtility, RecipeUtility } from '~/utilities';\r\n\r\n@Component({\r\n  selector: 'lab-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ListComponent implements OnInit, AfterViewInit {\r\n  vm$ = combineLatest([\r\n    this.store.select(Factories.getFactories),\r\n    this.store.select(Items.getItemSettings),\r\n    this.store.select(Items.getItemsModified),\r\n    this.store.select(Products.getStepsModified),\r\n    this.store.select(Products.getTotals),\r\n    this.store.select(Products.getSteps),\r\n    this.store.select(Products.getStepDetails),\r\n    this.store.select(Products.getStepByItemEntities),\r\n    this.store.select(Products.getStepTree),\r\n    this.store.select(Products.getEffectivePrecision),\r\n    this.store.select(Products.getEffectivePowerUnit),\r\n    this.store.select(Recipes.getRecipeSettings),\r\n    this.store.select(Recipes.getRecipesModified),\r\n    this.store.select(Recipes.getAdjustedDataset),\r\n    this.store.select(Settings.getColumnsState),\r\n    this.store.select(Settings.getSettings),\r\n    this.store.select(Settings.getDisplayRateInfo),\r\n    this.store.select(Settings.getOptions),\r\n    this.store.select(Settings.getBeltSpeed),\r\n    this.store.select(Settings.getBeltSpeedTxt),\r\n  ]).pipe(\r\n    map(\r\n      ([\r\n        factories,\r\n        itemSettings,\r\n        itemsModified,\r\n        stepsModified,\r\n        totals,\r\n        steps,\r\n        stepDetails,\r\n        stepByItemEntities,\r\n        stepTree,\r\n        effectivePrecision,\r\n        effectivePowerUnit,\r\n        recipeSettings,\r\n        recipesModified,\r\n        data,\r\n        columns,\r\n        settings,\r\n        dispRateInfo,\r\n        options,\r\n        beltSpeed,\r\n        beltSpeedTxt,\r\n      ]) => ({\r\n        factories,\r\n        itemSettings,\r\n        itemsModified,\r\n        stepsModified,\r\n        totals,\r\n        steps,\r\n        stepDetails,\r\n        stepByItemEntities,\r\n        stepTree,\r\n        effectivePrecision,\r\n        effectivePowerUnit,\r\n        recipeSettings,\r\n        recipesModified,\r\n        data,\r\n        columns,\r\n        settings,\r\n        dispRateInfo,\r\n        options,\r\n        beltSpeed,\r\n        beltSpeedTxt,\r\n      })\r\n    )\r\n  );\r\n\r\n  @ViewChild('stepsTable') stepsTable: Table | undefined;\r\n\r\n  fragmentId: string | null | undefined;\r\n\r\n  Column = Column;\r\n  ItemId = ItemId;\r\n  StepDetailTab = StepDetailTab;\r\n  Game = Game;\r\n  RecipeField = RecipeField;\r\n  Rational = Rational;\r\n\r\n  constructor(\r\n    public contentSvc: ContentService,\r\n    public trackSvc: TrackService,\r\n    private route: ActivatedRoute,\r\n    private store: Store<LabState>\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.route.fragment\r\n      .pipe(\r\n        first(),\r\n        filter((f) => f != null)\r\n      )\r\n      .subscribe((id) => {\r\n        // Store the fragment to navigate to it after the component loads\r\n        this.fragmentId = id;\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    // Now that component is loaded, try navigating to the fragment\r\n    try {\r\n      if (this.fragmentId) {\r\n        document.querySelector('#\\\\' + this.fragmentId)?.scrollIntoView();\r\n        combineLatest([\r\n          this.store.select(Products.getSteps),\r\n          this.store.select(Products.getStepDetails),\r\n        ])\r\n          .pipe(first())\r\n          .subscribe(([steps, stepDetails]) => {\r\n            const step = steps.find((s) => s.id === this.fragmentId);\r\n            if (step) {\r\n              const tabs = stepDetails[step.id].tabs;\r\n              if (tabs.length) {\r\n                if (this.stepsTable) {\r\n                  this.stepsTable.toggleRow(step);\r\n                }\r\n              }\r\n            }\r\n          });\r\n      }\r\n    } catch (e) {}\r\n  }\r\n\r\n  resetStep(step: Step): void {\r\n    if (step.itemId) {\r\n      this.resetItem(step.itemId);\r\n    }\r\n    if (step.recipeId) {\r\n      this.resetRecipe(step.recipeId);\r\n    }\r\n  }\r\n\r\n  export(\r\n    steps: Step[],\r\n    itemSettings: Items.ItemsState,\r\n    recipeSettings: Recipes.RecipesState,\r\n    columns: Preferences.ColumnsState,\r\n    data: Dataset\r\n  ): void {\r\n    ExportUtility.stepsToCsv(\r\n      steps,\r\n      columns,\r\n      itemSettings,\r\n      recipeSettings,\r\n      data\r\n    );\r\n  }\r\n\r\n  toggleDefaultRecipe(\r\n    itemId: string,\r\n    recipeId: string,\r\n    itemSettings: Items.ItemsState,\r\n    settings: Settings.SettingsState,\r\n    data: Dataset\r\n  ): void {\r\n    if (itemSettings[itemId].recipeId === recipeId) {\r\n      // Reset to null\r\n      this.setDefaultRecipe(itemId);\r\n    } else {\r\n      // Set default recipe\r\n      this.setDefaultRecipe(\r\n        itemId,\r\n        recipeId,\r\n        RecipeUtility.defaultRecipe(\r\n          itemId,\r\n          settings.disabledRecipeIds ?? [],\r\n          data\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  toggleRecipe(\r\n    id: string,\r\n    settings: Settings.SettingsState,\r\n    data: Dataset\r\n  ): void {\r\n    const disabledRecipes = settings.disabledRecipeIds ?? [];\r\n    const def = data.defaults?.disabledRecipeIds;\r\n    if (disabledRecipes.indexOf(id) === -1) {\r\n      this.setDisabledRecipes([...disabledRecipes, id], def);\r\n    } else {\r\n      this.setDisabledRecipes(\r\n        disabledRecipes.filter((i) => i !== id),\r\n        def\r\n      );\r\n    }\r\n  }\r\n\r\n  changeFactory(\r\n    recipeId: string,\r\n    value: string,\r\n    factories: Factories.FactoriesState,\r\n    data: Dataset\r\n  ): void {\r\n    this.setFactory(\r\n      recipeId,\r\n      value,\r\n      RecipeUtility.bestMatch(\r\n        data.recipeEntities[recipeId].producers,\r\n        factories.ids ?? []\r\n      )\r\n    );\r\n  }\r\n\r\n  changeRecipeField(\r\n    recipeId: string,\r\n    event: string | number,\r\n    recipeSettings: Recipes.RecipesState,\r\n    factories: Factories.FactoriesState,\r\n    field: RecipeField,\r\n    index?: number,\r\n    data?: Dataset\r\n  ): void {\r\n    const recipe = recipeSettings[recipeId];\r\n    if (recipe.factoryId) {\r\n      const factory = factories.entities[recipe.factoryId];\r\n      switch (field) {\r\n        case RecipeField.FactoryModules: {\r\n          if (\r\n            factory.moduleRankIds != null &&\r\n            data != null &&\r\n            typeof event === 'string' &&\r\n            index != null &&\r\n            recipe.factoryModuleIds != null\r\n          ) {\r\n            const count = recipe.factoryModuleIds.length;\r\n            const options = [...data.recipeModuleIds[recipeId], ItemId.Module];\r\n            const def = RecipeUtility.defaultModules(\r\n              options,\r\n              factory.moduleRankIds,\r\n              count\r\n            );\r\n            const modules = this.generateModules(\r\n              index,\r\n              event,\r\n              recipe.factoryModuleIds\r\n            );\r\n            this.setFactoryModules(recipeId, modules, def);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.BeaconCount: {\r\n          if (typeof event === 'string') {\r\n            const def = factory.beaconCount;\r\n            this.setBeaconCount(recipeId, event, def);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.Beacon: {\r\n          if (typeof event === 'string') {\r\n            const def = factory.beaconId;\r\n            this.setBeacon(recipeId, event, def);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.BeaconModules: {\r\n          if (\r\n            typeof event === 'string' &&\r\n            index != null &&\r\n            recipe.beaconModuleIds != null\r\n          ) {\r\n            const count = recipe.beaconModuleIds.length;\r\n            const def = new Array(count).fill(factory.beaconModuleId);\r\n            const value = this.generateModules(\r\n              index,\r\n              event,\r\n              recipe.beaconModuleIds\r\n            );\r\n            this.setBeaconModules(recipeId, value, def);\r\n          }\r\n          break;\r\n        }\r\n        case RecipeField.Overclock: {\r\n          if (typeof event === 'number') {\r\n            const def = factory.overclock;\r\n            const value = Math.max(1, Math.min(250, event));\r\n            this.setOverclock(recipeId, value, def);\r\n          }\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  generateModules(index: number, value: string, original: string[]): string[] {\r\n    const modules = [...original]; // Copy\r\n    // Fill in index to the right\r\n    for (let i = index; i < modules.length; i++) {\r\n      modules[i] = value;\r\n    }\r\n    return modules;\r\n  }\r\n\r\n  /** Action Dispatch Methods */\r\n  ignoreItem(value: string): void {\r\n    this.store.dispatch(new Items.IgnoreItemAction(value));\r\n  }\r\n\r\n  setBelt(id: string, value: string, def: string): void {\r\n    this.store.dispatch(new Items.SetBeltAction({ id, value, def }));\r\n  }\r\n\r\n  setWagon(id: string, value: string, def: string): void {\r\n    this.store.dispatch(new Items.SetWagonAction({ id, value, def }));\r\n  }\r\n\r\n  setFactory(id: string, value: string, def: string): void {\r\n    this.store.dispatch(new Recipes.SetFactoryAction({ id, value, def }));\r\n  }\r\n\r\n  setFactoryModules(\r\n    id: string,\r\n    value: string[],\r\n    def: string[] | undefined\r\n  ): void {\r\n    this.store.dispatch(\r\n      new Recipes.SetFactoryModulesAction({ id, value, def })\r\n    );\r\n  }\r\n\r\n  setBeaconCount(id: string, value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Recipes.SetBeaconCountAction({ id, value, def }));\r\n  }\r\n\r\n  setBeacon(id: string, value: string, def: string | undefined): void {\r\n    this.store.dispatch(new Recipes.SetBeaconAction({ id, value, def }));\r\n  }\r\n\r\n  setBeaconModules(\r\n    id: string,\r\n    value: string[],\r\n    def: string[] | undefined\r\n  ): void {\r\n    this.store.dispatch(new Recipes.SetBeaconModulesAction({ id, value, def }));\r\n  }\r\n\r\n  setBeaconTotal(id: string, value: string): void {\r\n    this.store.dispatch(new Recipes.SetBeaconTotalAction({ id, value }));\r\n  }\r\n\r\n  setOverclock(id: string, value: number, def: number | undefined): void {\r\n    this.store.dispatch(new Recipes.SetOverclockAction({ id, value, def }));\r\n  }\r\n\r\n  resetItem(value: string): void {\r\n    this.store.dispatch(new Items.ResetItemAction(value));\r\n  }\r\n\r\n  resetRecipe(value: string): void {\r\n    this.store.dispatch(new Recipes.ResetRecipeAction(value));\r\n  }\r\n\r\n  resetIgnores(): void {\r\n    this.store.dispatch(new Items.ResetIgnoresAction());\r\n  }\r\n\r\n  resetBelts(): void {\r\n    this.store.dispatch(new Items.ResetBeltsAction());\r\n  }\r\n\r\n  resetWagons(): void {\r\n    this.store.dispatch(new Items.ResetWagonsAction());\r\n  }\r\n\r\n  resetFactories(): void {\r\n    this.store.dispatch(new Recipes.ResetFactoriesAction());\r\n  }\r\n\r\n  resetBeacons(): void {\r\n    this.store.dispatch(new Recipes.ResetBeaconsAction());\r\n  }\r\n\r\n  setDisabledRecipes(value: string[], def: string[] | undefined): void {\r\n    this.store.dispatch(new Settings.SetDisabledRecipesAction({ value, def }));\r\n  }\r\n\r\n  setDefaultRecipe(id: string, value?: string, def?: string): void {\r\n    this.store.dispatch(new Items.SetRecipeAction({ id, value, def }));\r\n  }\r\n}\r\n","<ng-container *ngIf=\"vm$ | async as vm\">\r\n  <p-table\r\n    #stepsTable\r\n    dataKey=\"id\"\r\n    [rowTrackBy]=\"trackSvc.trackById\"\r\n    responsiveLayout=\"scroll\"\r\n    styleClass=\"p-datatable-sm\"\r\n    [value]=\"vm.steps\"\r\n  >\r\n    <ng-template pTemplate=\"header\">\r\n      <tr>\r\n        <!-- Row actions -->\r\n        <th class=\"w-0\">\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            class=\"p-button-outlined p-button-rounded\"\r\n            icon=\"fa-solid fa-table-columns\"\r\n            [pTooltip]=\"'list.openColumnSettings' | translate\"\r\n            (click)=\"contentSvc.showColumns$.next()\"\r\n          ></button>\r\n        </th>\r\n        <!-- Tree -->\r\n        <th *ngIf=\"vm.columns[Column.Tree].show\">\r\n          {{ 'list.tree' | translate }}\r\n        </th>\r\n        <!-- Items (Value / Icon)-->\r\n        <th colspan=\"2\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{\r\n              ('list.items' | translate) + vm.dispRateInfo.label\r\n            }}</span>\r\n            <button\r\n              *ngIf=\"vm.itemsModified.ignore\"\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-outlined p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'list.itemsUndoTooltip' | translate\"\r\n              (click)=\"resetIgnores()\"\r\n            ></button>\r\n          </div>\r\n        </th>\r\n        <!-- Belts -->\r\n        <th *ngIf=\"vm.columns[Column.Belts].show\" colspan=\"2\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ 'list.belts' | translate }}</span>\r\n            <button\r\n              *ngIf=\"vm.itemsModified.belts\"\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-outlined p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'list.beltsUndoTooltip' | translate\"\r\n              (click)=\"resetBelts()\"\r\n            ></button>\r\n          </div>\r\n        </th>\r\n        <!-- Wagons -->\r\n        <th *ngIf=\"vm.columns[Column.Wagons].show\" colspan=\"2\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{\r\n              ('list.wagons' | translate) + vm.dispRateInfo.label\r\n            }}</span>\r\n            <button\r\n              *ngIf=\"vm.itemsModified.wagons\"\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-outlined p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'list.wagonsUndoTooltip' | translate\"\r\n              (click)=\"resetWagons()\"\r\n            ></button>\r\n          </div>\r\n        </th>\r\n        <!-- Factories -->\r\n        <th colspan=\"2\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ 'list.factories' | translate }}</span>\r\n            <button\r\n              *ngIf=\"vm.recipesModified.factories\"\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-outlined p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'list.factoriesUndoTooltip' | translate\"\r\n              (click)=\"resetFactories()\"\r\n            ></button>\r\n          </div>\r\n        </th>\r\n        <!-- Beacons -->\r\n        <th *ngIf=\"vm.columns[Column.Beacons].show\" colspan=\"2\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <span>{{ 'list.beacons' | translate }}</span>\r\n            <button\r\n              *ngIf=\"vm.recipesModified.beacons\"\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"ms-2 p-button-outlined p-button-rounded\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'list.beaconsUndoTooltip' | translate\"\r\n              (click)=\"resetBeacons()\"\r\n            ></button>\r\n          </div>\r\n        </th>\r\n        <!-- Power -->\r\n        <th *ngIf=\"vm.columns[Column.Power].show\">\r\n          <span>{{ 'list.power' | translate }}</span>\r\n        </th>\r\n        <!-- Pollution -->\r\n        <th *ngIf=\"vm.columns[Column.Pollution].show\">\r\n          <span>{{\r\n            ('list.pollution' | translate) + vm.dispRateInfo.label\r\n          }}</span>\r\n        </th>\r\n        <!-- Link -->\r\n        <th *ngIf=\"vm.columns[Column.Link].show\" class=\"w-0\">\r\n          <button\r\n            pButton\r\n            pRipple\r\n            type=\"button\"\r\n            class=\"p-button-outlined p-button-rounded\"\r\n            icon=\"fa-solid fa-file-arrow-down\"\r\n            data-test=\"lab-list-export\"\r\n            [pTooltip]=\"'list.downloadTooltip' | translate\"\r\n            tooltipPosition=\"left\"\r\n            (click)=\"\r\n              export(\r\n                vm.steps,\r\n                vm.itemSettings,\r\n                vm.recipeSettings,\r\n                vm.columns,\r\n                vm.data\r\n              )\r\n            \"\r\n          ></button>\r\n        </th>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"body\" let-step let-expanded=\"expanded\">\r\n      <tr>\r\n        <!-- Expand row -->\r\n        <td [id]=\"step.id\" class=\"w-0\">\r\n          <div class=\"d-flex\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-text p-button-rounded p-button-plain transition-ease\"\r\n              [class.fa-rotate-90]=\"expanded\"\r\n              icon=\"fa-solid fa-angle-right\"\r\n              [pTooltip]=\"\r\n                (expanded ? 'list.hideDetails' : 'list.showDetails') | translate\r\n              \"\r\n              [pRowToggler]=\"step\"\r\n            ></button>\r\n          </div>\r\n        </td>\r\n        <!-- Tree -->\r\n        <td *ngIf=\"vm.columns[Column.Tree].show\" class=\"p-0\">\r\n          <div class=\"d-flex align-items-center links\">\r\n            <ng-container *ngIf=\"vm.stepTree[step.id]?.length\">\r\n              <div\r\n                *ngFor=\"let i of vm.stepTree[step.id]; last as last\"\r\n                class=\"connect\"\r\n                [class.trail]=\"i\"\r\n                [class.last]=\"last\"\r\n              ></div>\r\n              <div class=\"indent\"></div>\r\n            </ng-container>\r\n            <div class=\"icon\">\r\n              <i\r\n                *ngIf=\"step.itemId; else recipeIcon\"\r\n                [class]=\"step.itemId | iconSmClass\"\r\n                [pTooltip]=\"step.itemId | itemTooltip: vm.data\"\r\n                [escape]=\"false\"\r\n              ></i>\r\n              <ng-template #recipeIcon>\r\n                <i\r\n                  [class]=\"step.recipeId | iconSmClass: 'recipe'\"\r\n                  [pTooltip]=\"step.recipeId | recipeTooltip: vm.data\"\r\n                  [escape]=\"false\"\r\n                ></i>\r\n              </ng-template>\r\n            </div>\r\n          </div>\r\n        </td>\r\n        <!-- Items (Value / Icon) -->\r\n        <ng-container *ngIf=\"step.itemId && step.items; else emptyCol2\">\r\n          <td class=\"w-0 text-end\">\r\n            <span\r\n              *ngIf=\"step.surplus && step.surplus.nonzero()\"\r\n              class=\"monospace\"\r\n              >(+{{\r\n                step.surplus | rate: vm.effectivePrecision[Column.Surplus]\r\n              }})\r\n            </span>\r\n            <span class=\"monospace\">{{\r\n              step.items.sub(step.surplus || Rational.zero)\r\n                | rate: vm.effectivePrecision[Column.Items]\r\n            }}</span>\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"hover-action p-button-text\"\r\n              [class.hover-active]=\"vm.itemSettings[step.itemId].ignore\"\r\n              [icon]=\"step.itemId | iconSmClass\"\r\n              [pTooltip]=\"step.itemId | itemTooltip: vm.data\"\r\n              [escape]=\"false\"\r\n              (click)=\"ignoreItem(step.itemId)\"\r\n            >\r\n              <i class=\"hover-icon fa-solid fa-eye-slash\"></i>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n        <!-- Belts -->\r\n        <ng-container *ngIf=\"vm.columns[Column.Belts].show\">\r\n          <ng-container *ngIf=\"step.itemId && step.belts; else emptyCol2\">\r\n            <ng-container *ngIf=\"vm.itemSettings[step.itemId].beltId as beltId\">\r\n              <td class=\"w-0 text-end\">\r\n                <span class=\"monospace\">{{\r\n                  step.belts | rate: vm.effectivePrecision[Column.Belts]\r\n                }}</span>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex align-items-center\">\r\n                  <!-- Belt dropdown -->\r\n                  <p-dropdown\r\n                    *ngIf=\"\r\n                      vm.data.beltIds.indexOf(beltId) !== -1 &&\r\n                        vm.settings.beltId;\r\n                      else pipesDropdown\r\n                    \"\r\n                    labDropdownBase=\"icon\"\r\n                    [pTooltip]=\"\r\n                      'tooltip.belt'\r\n                        | translate\r\n                          : {\r\n                              name: vm.data.itemEntities[beltId].name,\r\n                              speed: vm.beltSpeedTxt[beltId]\r\n                            }\r\n                    \"\r\n                    [escape]=\"false\"\r\n                    [ngModel]=\"beltId\"\r\n                    [options]=\"vm.options.belts\"\r\n                    (onChange)=\"\r\n                      setBelt(step.itemId, $event.value, vm.settings.beltId)\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItem\" let-item>\r\n                      <div class=\"d-flex\">\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"\r\n                          'tooltip.belt'\r\n                            | translate\r\n                              : {\r\n                                  name: vm.data.itemEntities[item.value].name,\r\n                                  speed: vm.beltSpeedTxt[item.value]\r\n                                }\r\n                        \"\r\n                        [escape]=\"false\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                  <!-- Pipes dropdown -->\r\n                  <ng-template #pipesDropdown>\r\n                    <p-dropdown\r\n                      *ngIf=\"\r\n                        vm.data.pipeIds.indexOf(beltId) !== -1 &&\r\n                          vm.settings.pipeId;\r\n                        else pipeIcon\r\n                      \"\r\n                      labDropdownBase=\"icon\"\r\n                      [pTooltip]=\"\r\n                        'tooltip.pipe'\r\n                          | translate\r\n                            : {\r\n                                name: vm.data.itemEntities[beltId].name,\r\n                                speed: vm.beltSpeedTxt[beltId]\r\n                              }\r\n                      \"\r\n                      [escape]=\"false\"\r\n                      [ngModel]=\"beltId\"\r\n                      [options]=\"vm.options.pipes\"\r\n                      (onChange)=\"\r\n                        setBelt(step.itemId, $event.value, vm.settings.pipeId)\r\n                      \"\r\n                    >\r\n                      <ng-template pTemplate=\"selectedItem\" let-item>\r\n                        <div class=\"d-flex\">\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                        </div>\r\n                      </ng-template>\r\n                      <ng-template pTemplate=\"item\" let-item>\r\n                        <div\r\n                          class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                          [pTooltip]=\"\r\n                            'tooltip.pipe'\r\n                              | translate\r\n                                : {\r\n                                    name: vm.data.itemEntities[item.value].name,\r\n                                    speed: vm.beltSpeedTxt[item.value]\r\n                                  }\r\n                          \"\r\n                          [escape]=\"false\"\r\n                        >\r\n                          <i [class]=\"item.value | iconSmClass\"></i>\r\n                          <div class=\"ms-3 text-truncate\">\r\n                            {{ item.label }}\r\n                          </div>\r\n                        </div>\r\n                      </ng-template>\r\n                    </p-dropdown>\r\n                  </ng-template>\r\n                  <!-- Pipe icon only -->\r\n                  <ng-template #pipeIcon>\r\n                    <i\r\n                      [class]=\"beltId | iconClass\"\r\n                      [pTooltip]=\"\r\n                        'tooltip.pipe'\r\n                          | translate\r\n                            : {\r\n                                name: vm.data.itemEntities[beltId].name,\r\n                                speed: vm.beltSpeedTxt[beltId]\r\n                              }\r\n                      \"\r\n                      [escape]=\"false\"\r\n                    ></i>\r\n                  </ng-template>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- Wagons -->\r\n        <ng-container *ngIf=\"vm.columns[Column.Wagons].show\">\r\n          <ng-container\r\n            *ngIf=\"\r\n              step.itemId &&\r\n                step.wagons &&\r\n                vm.itemSettings[step.itemId].wagonId as wagonId;\r\n              else emptyCol2\r\n            \"\r\n          >\r\n            <td class=\"w-0 text-end\">\r\n              <span class=\"monospace\">{{\r\n                step.wagons | rate: vm.effectivePrecision[Column.Wagons]\r\n              }}</span>\r\n            </td>\r\n            <td class=\"ps-0\">\r\n              <div class=\"d-flex align-items-center\">\r\n                <!-- Cargo wagon dropdown -->\r\n                <p-dropdown\r\n                  *ngIf=\"\r\n                    vm.data.cargoWagonIds.indexOf(wagonId) !== -1 &&\r\n                      vm.settings.cargoWagonId;\r\n                    else fluidWagonsDropdown\r\n                  \"\r\n                  labDropdownBase=\"icon\"\r\n                  [pTooltip]=\"\r\n                    'tooltip.cargoWagon'\r\n                      | translate\r\n                        : {\r\n                            name: vm.data.itemEntities[wagonId].name,\r\n                            size: vm.data.cargoWagonEntities[wagonId].size\r\n                          }\r\n                  \"\r\n                  [escape]=\"false\"\r\n                  [ngModel]=\"wagonId\"\r\n                  [options]=\"vm.options.cargoWagons\"\r\n                  (onChange)=\"\r\n                    setWagon(\r\n                      step.itemId,\r\n                      $event.value,\r\n                      vm.settings.cargoWagonId\r\n                    )\r\n                  \"\r\n                >\r\n                  <ng-template pTemplate=\"selectedItem\" let-item>\r\n                    <div class=\"d-flex\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"item\" let-item>\r\n                    <div\r\n                      class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                      [pTooltip]=\"\r\n                        'tooltip.cargoWagon'\r\n                          | translate\r\n                            : {\r\n                                name: vm.data.itemEntities[item.value].name,\r\n                                size: vm.data.cargoWagonEntities[item.value]\r\n                                  .size\r\n                              }\r\n                      \"\r\n                      [escape]=\"false\"\r\n                    >\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                </p-dropdown>\r\n                <!-- Fluid wagon dropdown -->\r\n                <ng-template #fluidWagonsDropdown>\r\n                  <p-dropdown\r\n                    *ngIf=\"\r\n                      vm.data.fluidWagonIds.indexOf(wagonId) !== -1 &&\r\n                      vm.settings.fluidWagonId\r\n                    \"\r\n                    labDropdownBase=\"icon\"\r\n                    [pTooltip]=\"\r\n                      'tooltip.fluidWagon'\r\n                        | translate\r\n                          : {\r\n                              name: vm.data.itemEntities[wagonId].name,\r\n                              size: vm.data.fluidWagonEntities[wagonId].capacity\r\n                            }\r\n                    \"\r\n                    [escape]=\"false\"\r\n                    [ngModel]=\"wagonId\"\r\n                    [options]=\"vm.options.fluidWagons\"\r\n                    (onChange)=\"\r\n                      setWagon(\r\n                        step.itemId,\r\n                        $event.value,\r\n                        vm.settings.fluidWagonId\r\n                      )\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItem\" let-item>\r\n                      <div class=\"d-flex\">\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"\r\n                          'tooltip.fluidWagon'\r\n                            | translate\r\n                              : {\r\n                                  name: vm.data.itemEntities[item.value].name,\r\n                                  size: vm.data.fluidWagonEntities[item.value]\r\n                                    .capacity\r\n                                }\r\n                        \"\r\n                        [escape]=\"false\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                </ng-template>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- Factories -->\r\n        <ng-container\r\n          *ngIf=\"\r\n            step.recipeId &&\r\n              vm.recipeSettings[step.recipeId].factoryId as factoryId;\r\n            else emptyCol2\r\n          \"\r\n        >\r\n          <td class=\"w-0 text-end\">\r\n            <span\r\n              *ngIf=\"\r\n                step.factories &&\r\n                step.factories.nonzero() &&\r\n                (factoryId | factoryShowRate: vm.data.game)\r\n              \"\r\n              class=\"monospace\"\r\n              >{{\r\n                step.factories\r\n                  | factoryRate\r\n                    : vm.effectivePrecision[Column.Factories]\r\n                    : factoryId\r\n              }}</span\r\n            >\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            <ng-container *ngIf=\"factoryId | factoryShow: vm.data.game\">\r\n              <div\r\n                *ngIf=\"vm.data.recipeEntities[step.recipeId] as recipe\"\r\n                class=\"d-flex align-items-center\"\r\n              >\r\n                <i\r\n                  [class]=\"step.recipeId | iconClass: 'recipe'\"\r\n                  [pTooltip]=\"step.recipeId | recipeTooltip: vm.data\"\r\n                  [escape]=\"false\"\r\n                ></i>\r\n                <p-dropdown\r\n                  *ngIf=\"vm.data.factoryEntities[factoryId] as factory\"\r\n                  labDropdownBase=\"icon\"\r\n                  [pTooltip]=\"factoryId | factoryTooltip: vm.data\"\r\n                  [escape]=\"false\"\r\n                  [options]=\"recipe.producers | options: vm.data.itemEntities\"\r\n                  [ngModel]=\"factoryId\"\r\n                  (onChange)=\"\r\n                    changeFactory(\r\n                      step.recipeId,\r\n                      $event.value,\r\n                      vm.factories,\r\n                      vm.data\r\n                    )\r\n                  \"\r\n                >\r\n                  <ng-template pTemplate=\"selectedItem\" let-item>\r\n                    <div class=\"d-flex\">\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                    </div>\r\n                  </ng-template>\r\n                  <ng-template pTemplate=\"item\" let-item>\r\n                    <div\r\n                      class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                      [pTooltip]=\"item.value | factoryTooltip: vm.data\"\r\n                      [escape]=\"false\"\r\n                    >\r\n                      <i [class]=\"item.value | iconSmClass\"></i>\r\n                      <div class=\"ms-3 text-truncate\">\r\n                        {{ item.label }}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n                </p-dropdown>\r\n                <p-inputNumber\r\n                  *ngIf=\"vm.data.game === Game.Satisfactory\"\r\n                  #overclockInput\r\n                  suffix=\"%\"\r\n                  [min]=\"1\"\r\n                  [max]=\"250\"\r\n                  [step]=\"10\"\r\n                  [size]=\"2\"\r\n                  [pTooltip]=\"'list.overclockTooltip' | translate\"\r\n                  [ngModel]=\"vm.recipeSettings[step.recipeId].overclock\"\r\n                  (onBlur)=\"\r\n                    changeRecipeField(\r\n                      step.recipeId,\r\n                      overclockInput.value,\r\n                      vm.recipeSettings,\r\n                      vm.factories,\r\n                      RecipeField.Overclock\r\n                    )\r\n                  \"\r\n                >\r\n                </p-inputNumber>\r\n                <ng-container\r\n                  *ngIf=\"\r\n                    vm.recipeSettings[step.recipeId]\r\n                      .factoryModuleIds as moduleIds\r\n                  \"\r\n                >\r\n                  <p-dropdown\r\n                    *ngFor=\"let moduleId of moduleIds; index as i; last as last\"\r\n                    labDropdownBase=\"icon\"\r\n                    class=\"module-dropdown\"\r\n                    [class.last]=\"last\"\r\n                    [pTooltip]=\"moduleId | moduleTooltip: vm.data\"\r\n                    tooltipPosition=\"top\"\r\n                    [escape]=\"false\"\r\n                    [options]=\"\r\n                      vm.data.recipeModuleIds[step.recipeId]\r\n                        | options: vm.data.itemEntities:true\r\n                    \"\r\n                    [ngModel]=\"moduleId\"\r\n                    (onChange)=\"\r\n                      changeRecipeField(\r\n                        step.recipeId,\r\n                        $event.value,\r\n                        vm.recipeSettings,\r\n                        vm.factories,\r\n                        RecipeField.FactoryModules,\r\n                        i,\r\n                        vm.data\r\n                      )\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItem\" let-item>\r\n                      <div class=\"d-flex\">\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"item.value | moduleTooltip: vm.data\"\r\n                        [escape]=\"false\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                </ng-container>\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <!-- Beacons -->\r\n        <ng-container *ngIf=\"vm.columns[Column.Beacons].show\">\r\n          <ng-container *ngIf=\"step.recipeId; else emptyCol2\">\r\n            <ng-container *ngIf=\"vm.recipeSettings[step.recipeId] as settings\">\r\n              <td class=\"w-0\">\r\n                <lab-input-number\r\n                  *ngIf=\"settings.beaconId && settings.beaconCount\"\r\n                  [pTooltip]=\"'list.beaconEachTooltip' | translate\"\r\n                  tooltipPosition=\"left\"\r\n                  class=\"text-end\"\r\n                  width=\"3rem\"\r\n                  [value]=\"settings.beaconCount\"\r\n                  [hideButtons]=\"true\"\r\n                  (setValue)=\"\r\n                    changeRecipeField(\r\n                      step.recipeId,\r\n                      $event,\r\n                      vm.recipeSettings,\r\n                      vm.factories,\r\n                      RecipeField.BeaconCount\r\n                    )\r\n                  \"\r\n                ></lab-input-number>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex\">\r\n                  <p-dropdown\r\n                    *ngIf=\"settings.beaconId\"\r\n                    labDropdownBase=\"icon\"\r\n                    [pTooltip]=\"settings.beaconId | beaconTooltip: vm.data\"\r\n                    [escape]=\"false\"\r\n                    [options]=\"vm.options.beacons\"\r\n                    [ngModel]=\"settings.beaconId\"\r\n                    (onChange)=\"\r\n                      changeRecipeField(\r\n                        step.recipeId,\r\n                        $event.value,\r\n                        vm.recipeSettings,\r\n                        vm.factories,\r\n                        RecipeField.Beacon\r\n                      )\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItem\" let-item>\r\n                      <div class=\"d-flex\">\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"item.value | beaconTooltip: vm.data\"\r\n                        [escape]=\"false\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                  <p-dropdown\r\n                    *ngFor=\"\r\n                      let moduleId of settings.beaconModuleIds;\r\n                      index as i;\r\n                      last as last\r\n                    \"\r\n                    labDropdownBase=\"icon\"\r\n                    class=\"module-dropdown\"\r\n                    [class.last]=\"last\"\r\n                    [pTooltip]=\"moduleId | moduleTooltip: vm.data\"\r\n                    tooltipPosition=\"top\"\r\n                    [escape]=\"false\"\r\n                    [options]=\"vm.options.beaconModules\"\r\n                    [ngModel]=\"moduleId\"\r\n                    (onChange)=\"\r\n                      changeRecipeField(\r\n                        step.recipeId,\r\n                        $event.value,\r\n                        vm.recipeSettings,\r\n                        vm.factories,\r\n                        RecipeField.BeaconModules,\r\n                        i,\r\n                        vm.data\r\n                      )\r\n                    \"\r\n                  >\r\n                    <ng-template pTemplate=\"selectedItem\" let-item>\r\n                      <div class=\"d-flex\">\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                      </div>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"item\" let-item>\r\n                      <div\r\n                        class=\"d-flex align-items-center py-2 w-100 h-100\"\r\n                        [pTooltip]=\"item.value | moduleTooltip: vm.data\"\r\n                        [escape]=\"false\"\r\n                      >\r\n                        <i [class]=\"item.value | iconSmClass\"></i>\r\n                        <div class=\"ms-3 text-truncate\">\r\n                          {{ item.label }}\r\n                        </div>\r\n                      </div>\r\n                    </ng-template>\r\n                  </p-dropdown>\r\n                  <lab-input-number\r\n                    *ngIf=\"step.beacons\"\r\n                    [pTooltip]=\"'list.beaconTotalTooltip' | translate\"\r\n                    class=\"text-end\"\r\n                    width=\"4rem\"\r\n                    [value]=\"step.beacons.toString()\"\r\n                    [hideButtons]=\"true\"\r\n                    (setValue)=\"setBeaconTotal(step.recipeId, $event)\"\r\n                  ></lab-input-number>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- Power -->\r\n        <td *ngIf=\"vm.columns[Column.Power].show\" class=\"text-end\">\r\n          <span *ngIf=\"step.power && step.power.nonzero()\" class=\"monospace\">{{\r\n            step.power\r\n              | power: vm.effectivePrecision[Column.Power]:vm.effectivePowerUnit\r\n          }}</span>\r\n        </td>\r\n        <!-- Pollution -->\r\n        <td *ngIf=\"vm.columns[Column.Pollution].show\" class=\"text-end\">\r\n          <span\r\n            *ngIf=\"step.pollution && step.pollution.nonzero()\"\r\n            class=\"monospace\"\r\n            >{{\r\n              step.pollution | rate: vm.effectivePrecision[Column.Pollution]\r\n            }}</span\r\n          >\r\n        </td>\r\n        <!-- Link -->\r\n        <td *ngIf=\"vm.columns[Column.Link].show\">\r\n          <div class=\"d-flex\">\r\n            <a\r\n              class=\"text-decoration-none\"\r\n              target=\"_blank\"\r\n              [href]=\"step | stepHref: vm.data\"\r\n            >\r\n              <button\r\n                pButton\r\n                pRipple\r\n                type=\"button\"\r\n                class=\"p-button-text p-button-rounded p-button-plain\"\r\n                icon=\"fa-solid fa-arrow-up-right-from-square\"\r\n                [pTooltip]=\"'list.openNewTabTooltip' | translate\"\r\n                tooltipPosition=\"left\"\r\n              ></button>\r\n            </a>\r\n            <button\r\n              *ngIf=\"\r\n                (step.recipeId && vm.stepsModified.recipes[step.recipeId]) ||\r\n                (step.itemId && vm.stepsModified.items[step.itemId])\r\n              \"\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-text p-button-rounded p-button-plain\"\r\n              icon=\"fa-solid fa-rotate-left\"\r\n              [pTooltip]=\"'list.stepUndoTooltip' | translate\"\r\n              tooltipPosition=\"left\"\r\n              (click)=\"resetStep(step)\"\r\n            ></button>\r\n          </div>\r\n        </td>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"rowexpansion\" let-step>\r\n      <!-- Details row tab menu -->\r\n      <tr>\r\n        <td>\r\n          <a class=\"text-decoration-none\" [href]=\"'#' + step.id\">\r\n            <button\r\n              pButton\r\n              pRipple\r\n              type=\"button\"\r\n              class=\"p-button-text p-button-rounded p-button-plain\"\r\n              icon=\"fa-solid fa-link\"\r\n            ></button>\r\n          </a>\r\n        </td>\r\n        <td colspan=\"100\">\r\n          <p-tabMenu\r\n            #expandTabMenu\r\n            [model]=\"vm.stepDetails[step.id].tabs\"\r\n            [activeItem]=\"vm.stepDetails[step.id].tabs[0]\"\r\n          >\r\n            <ng-template pTemplate=\"item\" let-item>\r\n              {{ 'options.stepDetailTab.' + item.label | translate }}\r\n            </ng-template>\r\n          </p-tabMenu>\r\n        </td>\r\n      </tr>\r\n      <ng-container [ngSwitch]=\"expandTabMenu.activeItem.label\">\r\n        <!-- Item row details -->\r\n        <ng-container *ngSwitchCase=\"StepDetailTab.Item\">\r\n          <tr *ngIf=\"vm.stepDetails[step.id].outputs.length\" class=\"detail\">\r\n            <ng-template *ngTemplateOutlet=\"leftPad\"></ng-template>\r\n            <td colspan=\"100\" class=\"fw-bold\">\r\n              {{ 'list.sources' | translate }}\r\n            </td>\r\n          </tr>\r\n          <ng-container *ngFor=\"let output of vm.stepDetails[step.id].outputs\">\r\n            <ng-container\r\n              *ngIf=\"output.outputs && output.recipeId && step.itemId\"\r\n            >\r\n              <ng-container *ngIf=\"output.outputs[step.itemId] as value\">\r\n                <ng-container\r\n                  *ngTemplateOutlet=\"\r\n                    detailRow;\r\n                    context: {\r\n                      items: step.items.mul(value),\r\n                      itemId: step.itemId,\r\n                      belts: step.belts?.mul(value),\r\n                      beltId: vm.itemSettings[step.itemId].beltId,\r\n                      wagons: step.wagons?.mul(value),\r\n                      wagonId: vm.itemSettings[step.itemId].wagonId,\r\n                      factories: output.factories,\r\n                      factoryId: vm.recipeSettings[output.recipeId].factoryId,\r\n                      recipeId: output.recipeId,\r\n                      percent: value,\r\n                      percentOnDest: true,\r\n                      destId: step.itemId\r\n                    }\r\n                  \"\r\n                >\r\n                </ng-container>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n          <tr *ngIf=\"step.parents\" class=\"detail\">\r\n            <ng-template *ngTemplateOutlet=\"leftPad\"></ng-template>\r\n            <td colspan=\"100\" class=\"fw-bold\">\r\n              {{ 'list.destinations' | translate }}\r\n            </td>\r\n          </tr>\r\n          <ng-container\r\n            *ngFor=\"let parent of step.parents | keyvalue: trackSvc.sortByValue\"\r\n          >\r\n            <ng-container *ngIf=\"step.itemId\">\r\n              <ng-container\r\n                *ngTemplateOutlet=\"\r\n                  detailRow;\r\n                  context: {\r\n                    items: step.items?.mul(parent.value),\r\n                    itemId: step.itemId,\r\n                    belts: step.belts?.mul(parent.value),\r\n                    beltId: vm.itemSettings[step.itemId].beltId,\r\n                    wagons: step.wagons?.mul(parent.value),\r\n                    wagonId: vm.itemSettings[step.itemId].wagonId,\r\n                    factories:\r\n                      vm.stepDetails[step.id].outputs.length === 1\r\n                        ? step.factories?.mul(parent.value)\r\n                        : null,\r\n                    factoryId:\r\n                      vm.stepDetails[step.id].outputs.length === 1 &&\r\n                      step.recipeId\r\n                        ? vm.recipeSettings[step.recipeId].factoryId\r\n                        : null,\r\n                    recipeId: step.recipeId,\r\n                    percent: parent.value,\r\n                    destId: parent.key,\r\n                    destIsRecipe: true\r\n                  }\r\n                \"\r\n              >\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- Recipe row details -->\r\n        <ng-container *ngSwitchCase=\"StepDetailTab.Recipe\">\r\n          <ng-container *ngIf=\"vm.recipeSettings[step.recipeId] as settings\">\r\n            <ng-container\r\n              *ngIf=\"\r\n                vm.data.game === Game.Factorio &&\r\n                settings.factoryId &&\r\n                vm.data.itemEntities[settings.factoryId].factory?.mining\r\n              \"\r\n            >\r\n              <tr class=\"detail\">\r\n                <ng-template *ngTemplateOutlet=\"leftPad\"></ng-template>\r\n                <td colspan=\"100\" class=\"fw-bold\">\r\n                  {{ 'list.depletion' | translate }}\r\n                </td>\r\n              </tr>\r\n              <ng-container\r\n                *ngFor=\"\r\n                  let output of step.outputs | keyvalue: trackSvc.sortByValue\r\n                \"\r\n              >\r\n                <ng-container\r\n                  *ngIf=\"{\r\n                    step: vm.stepByItemEntities[output.key],\r\n                    percent: step.outputs?.[output.key]\r\n                  } as row\"\r\n                >\r\n                  <ng-container\r\n                    *ngIf=\"row.step && row.percent && row.step.items\"\r\n                  >\r\n                    <ng-container\r\n                      *ngTemplateOutlet=\"\r\n                        detailRow;\r\n                        context: {\r\n                          items: row.step.items\r\n                            .mul(row.percent)\r\n                            .div(vm.data.recipeR[step.recipeId].productivity),\r\n                          itemId: output.key\r\n                        }\r\n                      \"\r\n                    >\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </ng-container>\r\n            </ng-container>\r\n            <ng-container\r\n              *ngIf=\"(vm.data.recipeR[step.recipeId].in | keyvalue).length\"\r\n            >\r\n              <tr class=\"detail\">\r\n                <ng-template *ngTemplateOutlet=\"leftPad\"></ng-template>\r\n                <td colspan=\"100\" class=\"fw-bold\">\r\n                  {{ 'list.inputs' | translate }}\r\n                </td>\r\n              </tr>\r\n              <ng-container\r\n                *ngFor=\"\r\n                  let input of vm.data.recipeR[step.recipeId].in\r\n                    | keyvalue: trackSvc.sortByValue\r\n                \"\r\n              >\r\n                <ng-container\r\n                  *ngIf=\"{\r\n                    step: vm.stepByItemEntities[input.key], \r\n                    percent: vm.stepByItemEntities[input.key].parents?.[step.recipeId]\r\n                  } as row\"\r\n                >\r\n                  <ng-container *ngIf=\"row.step.itemId && row.percent\">\r\n                    <ng-container\r\n                      *ngTemplateOutlet=\"\r\n                        detailRow;\r\n                        context: {\r\n                          items: row.step.items?.mul(row.percent),\r\n                          itemId: input.key,\r\n                          belts: row.step.belts?.mul(row.percent),\r\n                          beltId: vm.itemSettings[row.step.itemId].beltId,\r\n                          wagons: row.step.wagons?.mul(row.percent),\r\n                          wagonId: vm.itemSettings[row.step.itemId].wagonId,\r\n                          factories: row.step.factories?.mul(row.percent),\r\n                          factoryId:\r\n                            row.step.recipeId &&\r\n                            vm.recipeSettings[row.step.recipeId].factoryId,\r\n                          recipeId: row.step.recipeId,\r\n                          percent: row.percent,\r\n                          destId: step.recipeId,\r\n                          destIsRecipe: true\r\n                        }\r\n                      \"\r\n                    >\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </ng-container>\r\n            </ng-container>\r\n            <tr class=\"detail\">\r\n              <ng-template *ngTemplateOutlet=\"leftPad\"></ng-template>\r\n              <td colspan=\"100\" class=\"fw-bold\">\r\n                {{ 'list.outputs' | translate }}\r\n              </td>\r\n            </tr>\r\n            <ng-container\r\n              *ngFor=\"\r\n                let output of vm.data.recipeR[step.recipeId].out\r\n                  | keyvalue: trackSvc.sortByValue\r\n              \"\r\n            >\r\n              <ng-container\r\n                *ngIf=\"{\r\n                  step: vm.stepByItemEntities[output.key], \r\n                  percent: step.outputs?.[output.key]\r\n                } as row\"\r\n              >\r\n                <ng-container *ngIf=\"row.step.itemId && row.percent\">\r\n                  <ng-container\r\n                    *ngTemplateOutlet=\"\r\n                      detailRow;\r\n                      context: {\r\n                        items: row.step.items?.mul(row.percent),\r\n                        itemId: output.key,\r\n                        belts: row.step.belts?.mul(row.percent),\r\n                        beltId: vm.itemSettings[row.step.itemId].beltId,\r\n                        wagons: row.step.wagons?.mul(row.percent),\r\n                        wagonId: vm.itemSettings[row.step.itemId].wagonId,\r\n                        factories: row.step.factories?.mul(row.percent),\r\n                        factoryId:\r\n                          row.step.recipeId &&\r\n                          vm.recipeSettings[row.step.recipeId].factoryId,\r\n                        recipeId: row.step.recipeId,\r\n                        percent: row.percent,\r\n                        percentOnDest: true,\r\n                        destId: step.recipeId,\r\n                        destIsRecipe: true\r\n                      }\r\n                    \"\r\n                  >\r\n                  </ng-container>\r\n                </ng-container>\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n        </ng-container>\r\n        <!-- Factory row details -->\r\n        <tr *ngSwitchCase=\"StepDetailTab.Factory\" class=\"detail\">\r\n          <td></td>\r\n          <td colspan=\"100\">\r\n            <div\r\n              *ngIf=\"step.recipeId && step.factories\"\r\n              class=\"d-flex align-items-center\"\r\n            >\r\n              <table class=\"mw-0\">\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let input of vm.data.recipeR[step.recipeId].in\r\n                      | keyvalue: trackSvc.sortByValue\r\n                  \"\r\n                >\r\n                  <ng-container\r\n                    *ngIf=\"{\r\n                      step: vm.stepByItemEntities[input.key],\r\n                      percent: vm.stepByItemEntities[input.key].parents?.[step.recipeId]\r\n                    } as row\"\r\n                  >\r\n                    <tr *ngIf=\"row.percent\">\r\n                      <td>\r\n                        <ng-container *ngIf=\"row.step.items\">\r\n                          <ng-container\r\n                            *ngTemplateOutlet=\"\r\n                              factoryValueCell;\r\n                              context: {\r\n                                value:\r\n                                  row.step.items\r\n                                    .mul(row.percent)\r\n                                    .div(step.factories)\r\n                                  | rate: vm.effectivePrecision[Column.Items],\r\n                                itemId: input.key\r\n                              }\r\n                            \"\r\n                          >\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </td>\r\n                      <td *ngIf=\"vm.columns[Column.Belts].show\">\r\n                        <ng-container *ngIf=\"row.step.belts\">\r\n                          <ng-container\r\n                            *ngIf=\"vm.itemSettings[input.key].beltId as beltId\"\r\n                          >\r\n                            <ng-container\r\n                              *ngTemplateOutlet=\"\r\n                                factoryValueCell;\r\n                                context: {\r\n                                  value:\r\n                                    row.step.belts\r\n                                      .mul(row.percent)\r\n                                      .div(step.factories)\r\n                                    | rate: vm.effectivePrecision[Column.Belts],\r\n                                  itemId: beltId\r\n                                }\r\n                              \"\r\n                            >\r\n                            </ng-container>\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </td>\r\n                      <ng-container *ngIf=\"vm.data.game === Game.Factorio\">\r\n                        <td>\r\n                          <ng-container\r\n                            *ngIf=\"\r\n                              vm.itemSettings[input.key].beltId !==\r\n                                ItemId.Pipe && row.step.items\r\n                            \"\r\n                          >\r\n                            <ng-container\r\n                              *ngIf=\"\r\n                                row.step.items\r\n                                  .mul(row.percent)\r\n                                  .div(step.factories)\r\n                                  .div(vm.dispRateInfo.value)\r\n                                  | inserterSpeed: vm.settings as ins\r\n                              \"\r\n                            >\r\n                              <ng-container\r\n                                *ngTemplateOutlet=\"\r\n                                  factoryValueCell;\r\n                                  context: {\r\n                                    value: ins.value | rate: 1,\r\n                                    itemId: ins.id\r\n                                  }\r\n                                \"\r\n                              >\r\n                              </ng-container>\r\n                            </ng-container>\r\n                          </ng-container>\r\n                        </td>\r\n                      </ng-container>\r\n                    </tr>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </table>\r\n              <i class=\"fa-solid fa-arrow-right mx-3\"></i>\r\n              <table class=\"mw-0\">\r\n                <tr>\r\n                  <td class=\"monospace\">1</td>\r\n                  <td>\r\n                    <div\r\n                      *ngIf=\"\r\n                        vm.recipeSettings[step.recipeId]?.factoryId as factoryId\r\n                      \"\r\n                      class=\"d-flex align-items-center\"\r\n                    >\r\n                      <i\r\n                        [class]=\"step.recipeId | iconClass: 'recipe'\"\r\n                        [pTooltip]=\"step.recipeId | recipeTooltip: vm.data\"\r\n                        [escape]=\"false\"\r\n                      ></i>\r\n                      <i\r\n                        [class]=\"factoryId | iconClass\"\r\n                        [pTooltip]=\"factoryId | factoryTooltip: vm.data\"\r\n                        [escape]=\"false\"\r\n                      ></i>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n              <i class=\"fa-solid fa-arrow-right mx-3\"></i>\r\n              <table class=\"mw-0\">\r\n                <ng-container\r\n                  *ngFor=\"\r\n                    let output of vm.data.recipeR[step.recipeId].out\r\n                      | keyvalue: trackSvc.sortByValue\r\n                  \"\r\n                >\r\n                  <tr\r\n                    *ngIf=\"\r\n                      output.value.div(\r\n                        vm.data.recipeR[step.recipeId].time\r\n                      ) as items\r\n                    \"\r\n                  >\r\n                    <ng-container *ngIf=\"vm.data.game === Game.Factorio\">\r\n                      <td>\r\n                        <ng-container\r\n                          *ngIf=\"\r\n                            vm.itemSettings[output.key].beltId !== ItemId.Pipe\r\n                          \"\r\n                        >\r\n                          <ng-container\r\n                            *ngIf=\"items | inserterSpeed: vm.settings as ins\"\r\n                          >\r\n                            <ng-container\r\n                              *ngTemplateOutlet=\"\r\n                                factoryValueCell;\r\n                                context: {\r\n                                  value: ins.value | rate: 1,\r\n                                  itemId: ins.id\r\n                                }\r\n                              \"\r\n                            >\r\n                            </ng-container>\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </td>\r\n                    </ng-container>\r\n                    <td *ngIf=\"vm.columns[Column.Belts].show\">\r\n                      <ng-container\r\n                        *ngIf=\"vm.itemSettings[output.key].beltId as beltId\"\r\n                      >\r\n                        <ng-container\r\n                          *ngTemplateOutlet=\"\r\n                            factoryValueCell;\r\n                            context: {\r\n                              value:\r\n                                items.div(vm.beltSpeed[beltId])\r\n                                | rate: vm.effectivePrecision[Column.Belts],\r\n                              itemId: beltId\r\n                            }\r\n                          \"\r\n                        >\r\n                        </ng-container>\r\n                      </ng-container>\r\n                    </td>\r\n                    <td>\r\n                      <ng-container\r\n                        *ngTemplateOutlet=\"\r\n                          factoryValueCell;\r\n                          context: {\r\n                            value:\r\n                              items.mul(vm.dispRateInfo.value)\r\n                              | rate: vm.effectivePrecision[Column.Items],\r\n                            itemId: output.key\r\n                          }\r\n                        \"\r\n                      >\r\n                      </ng-container>\r\n                    </td>\r\n                  </tr>\r\n                </ng-container>\r\n              </table>\r\n              <ng-template\r\n                #factoryValueCell\r\n                let-value=\"value\"\r\n                let-itemId=\"itemId\"\r\n              >\r\n                <div class=\"d-flex align-items-center justify-content-end\">\r\n                  <span class=\"monospace\">{{ value }}</span>\r\n                  <i\r\n                    [class]=\"itemId | iconClass\"\r\n                    [pTooltip]=\"itemId | itemTooltip: vm.data\"\r\n                    [escape]=\"false\"\r\n                  ></i>\r\n                </div>\r\n              </ng-template>\r\n            </div>\r\n            <div *ngIf=\"vm.data.game === Game.Factorio\">\r\n              <small [innerHTML]=\"'list.inserterCountInfo' | translate\"></small>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <!-- Recipes row details -->\r\n        <ng-container *ngSwitchCase=\"StepDetailTab.Recipes\">\r\n          <ng-container *ngIf=\"step.itemId\">\r\n            <ng-container\r\n              *ngIf=\"vm.stepDetails[step.id].defaultableRecipeIds.length\"\r\n            >\r\n              <tr class=\"detail\">\r\n                <td></td>\r\n                <td colspan=\"100\">\r\n                  <div>\r\n                    <div class=\"fw-bold\">\r\n                      {{ 'list.defaultRecipe' | translate }}\r\n                    </div>\r\n                    <div>\r\n                      <small>{{ 'list.defaultRecipeInfo1' | translate }}</small>\r\n                    </div>\r\n                    <div>\r\n                      <small>{{ 'list.defaultRecipeInfo2' | translate }}</small>\r\n                    </div>\r\n                    <div\r\n                      class=\"p-error\"\r\n                      *ngIf=\"vm.data.itemRecipeId[step.itemId] === null\"\r\n                    >\r\n                      <small>{{ 'list.defaultRecipeInfo3' | translate }}</small>\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr class=\"detail\">\r\n                <td></td>\r\n                <td colspan=\"100\">\r\n                  <div class=\"d-flex flex-wrap\">\r\n                    <button\r\n                      *ngFor=\"\r\n                        let recipeId of vm.stepDetails[step.id]\r\n                          .defaultableRecipeIds\r\n                      \"\r\n                      pButton\r\n                      pRipple\r\n                      type=\"button\"\r\n                      class=\"p-button-rounded me-2\"\r\n                      [class.p-button-text]=\"\r\n                        vm.data.itemRecipeId[step.itemId] !== recipeId\r\n                      \"\r\n                      [icon]=\"recipeId | iconSmClass: 'recipe'\"\r\n                      [pTooltip]=\"recipeId | recipeTooltip: vm.data\"\r\n                      [escape]=\"false\"\r\n                      (click)=\"\r\n                        toggleDefaultRecipe(\r\n                          step.itemId,\r\n                          recipeId,\r\n                          vm.itemSettings,\r\n                          vm.settings,\r\n                          vm.data\r\n                        )\r\n                      \"\r\n                    ></button>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </ng-container>\r\n            <tr class=\"detail\">\r\n              <td></td>\r\n              <td colspan=\"100\">\r\n                <div>\r\n                  <div class=\"fw-bold\">\r\n                    {{ 'list.enabledRecipes' | translate }}\r\n                  </div>\r\n                  <div>\r\n                    <small>{{ 'list.enabledRecipesInfo' | translate }}</small>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            <tr class=\"detail\">\r\n              <td></td>\r\n              <td colspan=\"100\">\r\n                <div class=\"d-flex flex-wrap\">\r\n                  <button\r\n                    *ngFor=\"let recipeId of vm.stepDetails[step.id].recipeIds\"\r\n                    pButton\r\n                    pRipple\r\n                    type=\"button\"\r\n                    class=\"hover-action p-button-rounded p-button-text me-2\"\r\n                    [class.hover-active]=\"\r\n                      vm.settings.disabledRecipeIds.indexOf(recipeId) !== -1\r\n                    \"\r\n                    [icon]=\"recipeId | iconSmClass: 'recipe'\"\r\n                    [pTooltip]=\"recipeId | recipeTooltip: vm.data\"\r\n                    [escape]=\"false\"\r\n                    (click)=\"toggleRecipe(recipeId, vm.settings, vm.data)\"\r\n                  >\r\n                    <i class=\"hover-icon fa-solid fa-eye-slash\"></i>\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n          </ng-container>\r\n        </ng-container>\r\n      </ng-container>\r\n    </ng-template>\r\n    <ng-template #emptyCol2>\r\n      <td colspan=\"2\"></td>\r\n    </ng-template>\r\n    <ng-template #leftPad>\r\n      <td></td>\r\n      <td *ngIf=\"vm.columns[Column.Tree].show\"></td>\r\n    </ng-template>\r\n    <ng-template\r\n      #detailRow\r\n      let-items=\"items\"\r\n      let-itemId=\"itemId\"\r\n      let-belts=\"belts\"\r\n      let-beltId=\"beltId\"\r\n      let-wagons=\"wagons\"\r\n      let-wagonId=\"wagonId\"\r\n      let-factories=\"factories\"\r\n      let-factoryId=\"factoryId\"\r\n      let-recipeId=\"recipeId\"\r\n      let-percent=\"percent\"\r\n      let-percentOnDest=\"percentOnDest\"\r\n      let-destId=\"destId\"\r\n      let-destIsRecipe=\"destIsRecipe\"\r\n    >\r\n      <tr class=\"detail\">\r\n        <ng-container *ngIf=\"itemId\">\r\n          <ng-template *ngTemplateOutlet=\"leftPad\"></ng-template>\r\n          <td class=\"w-0 text-end\">\r\n            <span class=\"monospace\">{{\r\n              items | rate: vm.effectivePrecision[Column.Items]\r\n            }}</span>\r\n          </td>\r\n          <td class=\"ps-0\">\r\n            <div class=\"d-flex\">\r\n              <i\r\n                [class]=\"itemId | iconClass\"\r\n                [pTooltip]=\"itemId | itemTooltip: vm.data\"\r\n                [escape]=\"false\"\r\n              ></i>\r\n            </div>\r\n          </td>\r\n          <ng-container *ngIf=\"vm.columns[Column.Belts].show\">\r\n            <ng-container *ngIf=\"belts && beltId\">\r\n              <td class=\"w-0 text-end\">\r\n                <span class=\"monospace\">{{\r\n                  belts | rate: vm.effectivePrecision[Column.Belts]\r\n                }}</span>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex\">\r\n                  <i\r\n                    [class]=\"beltId | iconClass\"\r\n                    [pTooltip]=\"\r\n                      'tooltip.belt'\r\n                        | translate\r\n                          : {\r\n                              name: vm.data.itemEntities[beltId].name,\r\n                              speed: vm.beltSpeedTxt[beltId]\r\n                            }\r\n                    \"\r\n                    [escape]=\"false\"\r\n                  ></i>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"vm.columns[Column.Wagons].show\">\r\n            <ng-container *ngIf=\"wagons && wagonId\">\r\n              <td class=\"w-0 text-end\">\r\n                <span class=\"monospace\">{{\r\n                  wagons | rate: vm.effectivePrecision[Column.Wagons]\r\n                }}</span>\r\n              </td>\r\n              <td class=\"ps-0\">\r\n                <div class=\"d-flex\">\r\n                  <i\r\n                    *ngIf=\"\r\n                      vm.data.cargoWagonIds.indexOf(wagonId) !== -1;\r\n                      else fluidWagonIcon\r\n                    \"\r\n                    [class]=\"wagonId | iconClass\"\r\n                    [pTooltip]=\"\r\n                      'tooltip.cargoWagon'\r\n                        | translate\r\n                          : {\r\n                              name: vm.data.itemEntities[wagonId].name,\r\n                              size: vm.data.cargoWagonEntities[wagonId].size\r\n                            }\r\n                    \"\r\n                    [escape]=\"false\"\r\n                  ></i>\r\n                  <ng-template #fluidWagonIcon>\r\n                    <i\r\n                      [class]=\"wagonId | iconClass\"\r\n                      [pTooltip]=\"\r\n                        'tooltip.fluidWagon'\r\n                          | translate\r\n                            : {\r\n                                name: vm.data.itemEntities[wagonId].name,\r\n                                size: vm.data.fluidWagonEntities[wagonId]\r\n                                  .capacity\r\n                              }\r\n                      \"\r\n                      [escape]=\"false\"\r\n                    ></i>\r\n                  </ng-template>\r\n                </div>\r\n              </td>\r\n            </ng-container>\r\n          </ng-container>\r\n          <td class=\"w-0 text-end\">\r\n            <span\r\n              *ngIf=\"\r\n                factories &&\r\n                factories.nonzero() &&\r\n                (factoryId | factoryShowRate: vm.data.game)\r\n              \"\r\n              class=\"monospace\"\r\n              >{{\r\n                factories\r\n                  | factoryRate\r\n                    : vm.effectivePrecision[Column.Factories]\r\n                    : factoryId\r\n              }}</span\r\n            >\r\n          </td>\r\n          <td class=\"p-0\" colspan=\"100\">\r\n            <div class=\"d-flex align-items-center\">\r\n              <ng-container\r\n                *ngIf=\"factoryId | factoryShow: vm.data.game; else factoryFill\"\r\n              >\r\n                <i\r\n                  [class]=\"recipeId | iconClass: 'recipe'\"\r\n                  [pTooltip]=\"recipeId | recipeTooltip: vm.data\"\r\n                  [escape]=\"false\"\r\n                ></i>\r\n                <i\r\n                  [class]=\"factoryId | iconClass\"\r\n                  [pTooltip]=\"factoryId | factoryTooltip: vm.data\"\r\n                  [escape]=\"false\"\r\n                ></i>\r\n              </ng-container>\r\n              <ng-template #factoryFill>\r\n                <div class=\"d-flex invisible\">\r\n                  <i class=\"lab-icon\"></i>\r\n                </div>\r\n                <div class=\"d-flex invisible\">\r\n                  <i class=\"lab-icon\"></i>\r\n                </div>\r\n              </ng-template>\r\n              <ng-container *ngIf=\"percent && destId\">\r\n                <i\r\n                  class=\"m-1 p-2 fa-solid fa-arrow-right\"\r\n                  *ngIf=\"percentOnDest\"\r\n                ></i>\r\n                <span class=\"monospace\"\r\n                  >{{ percent | rate: -2 | leftPad }}%</span\r\n                >\r\n                <i\r\n                  class=\"m-1 p-2 fa-solid fa-arrow-right\"\r\n                  *ngIf=\"!percentOnDest\"\r\n                ></i>\r\n                <i\r\n                  [class]=\"\r\n                    destId | iconClass: (destIsRecipe ? 'recipe' : 'item')\r\n                  \"\r\n                  [pTooltip]=\"\r\n                    destIsRecipe\r\n                      ? (destId | recipeTooltip: vm.data)\r\n                      : (destId | itemTooltip: vm.data)\r\n                  \"\r\n                  [escape]=\"false\"\r\n                ></i>\r\n              </ng-container>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n      </tr>\r\n    </ng-template>\r\n    <ng-template pTemplate=\"footer\">\r\n      <tr>\r\n        <td></td>\r\n        <td *ngIf=\"vm.columns[Column.Tree].show\"></td>\r\n        <td colspan=\"2\">\r\n          {{ 'list.total' | translate }}\r\n        </td>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: { column: Column.Belts, totals: vm.totals.belts }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: { column: Column.Wagons, totals: vm.totals.wagons }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: { column: Column.Factories, totals: vm.totals.factories }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <ng-container\r\n          *ngTemplateOutlet=\"\r\n            totalCell;\r\n            context: { column: Column.Beacons, totals: vm.totals.beacons }\r\n          \"\r\n        >\r\n        </ng-container>\r\n        <td *ngIf=\"vm.columns[Column.Power].show\" class=\"text-end inherit\">\r\n          <span class=\"monospace\">{{\r\n            vm.totals.power\r\n              | power: vm.effectivePrecision[Column.Power]:vm.effectivePowerUnit\r\n          }}</span>\r\n        </td>\r\n        <td *ngIf=\"vm.columns[Column.Pollution].show\" class=\"text-end inherit\">\r\n          <span class=\"monospace\">{{\r\n            vm.totals.pollution | rate: vm.effectivePrecision[Column.Pollution]\r\n          }}</span>\r\n        </td>\r\n        <td *ngIf=\"vm.columns[Column.Link].show\"></td>\r\n      </tr>\r\n      <ng-template #totalCell let-column=\"column\" let-totals=\"totals\">\r\n        <ng-container *ngIf=\"vm.columns[column].show\">\r\n          <td class=\"w-0 text-end inherit\">\r\n            <div\r\n              *ngFor=\"let tot of totals | keyvalue: trackSvc.sortByValue\"\r\n              class=\"py-2 icon-height\"\r\n            >\r\n              <span class=\"monospace\">{{\r\n                tot.value | rate: vm.effectivePrecision[column]\r\n              }}</span>\r\n            </div>\r\n          </td>\r\n          <td class=\"ps-0 inherit\">\r\n            <i\r\n              *ngFor=\"let tot of totals | keyvalue: trackSvc.sortByValue\"\r\n              class=\"d-block\"\r\n              [class]=\"tot.key | iconClass: 'item'\"\r\n              [pTooltip]=\"\r\n                vm.data.itemEntities[tot.key]?.name ||\r\n                vm.data.recipeEntities[tot.key].name\r\n              \"\r\n            ></i>\r\n          </td>\r\n        </ng-container>\r\n      </ng-template>\r\n    </ng-template>\r\n  </p-table>\r\n</ng-container>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppSharedModule } from '~/app-shared.module';\r\nimport { ListRoutingModule } from './list-routing.module';\r\nimport { ListComponent } from './list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, AppSharedModule, ListRoutingModule],\r\n  declarations: [ListComponent],\r\n})\r\nexport class ListModule {}\r\n"],"names":["combineLatest","filter","first","map","Column","Game","ItemId","Rational","RecipeField","StepDetailTab","Factories","Items","Products","Recipes","Settings","ExportUtility","RecipeUtility","i0","last_r62","_r58","beltId_r81","vm_r1","_r85","_r83","_r6","wagonId_r120","_r122","factoryId_r153","moduleId_r186","settings_r209","moduleId_r230","step_r45","_r487","_r477","ListComponent","constructor","contentSvc","trackSvc","route","store","select","getFactories","getItemSettings","getItemsModified","getStepsModified","getTotals","getSteps","getStepDetails","getStepByItemEntities","getStepTree","getEffectivePrecision","getEffectivePowerUnit","getRecipeSettings","getRecipesModified","getAdjustedDataset","getColumnsState","getSettings","getDisplayRateInfo","getOptions","getBeltSpeed","getBeltSpeedTxt","pipe","factories","itemSettings","itemsModified","stepsModified","totals","steps","stepDetails","stepByItemEntities","stepTree","effectivePrecision","effectivePowerUnit","recipeSettings","recipesModified","data","columns","settings","dispRateInfo","options","beltSpeed","beltSpeedTxt","ngOnInit","fragment","f","subscribe","id","fragmentId","ngAfterViewInit","document","querySelector","scrollIntoView","step","find","s","tabs","length","stepsTable","toggleRow","e","resetStep","itemId","resetItem","recipeId","resetRecipe","export","stepsToCsv","toggleDefaultRecipe","setDefaultRecipe","defaultRecipe","disabledRecipeIds","toggleRecipe","disabledRecipes","def","defaults","indexOf","setDisabledRecipes","i","changeFactory","value","setFactory","bestMatch","recipeEntities","producers","ids","changeRecipeField","event","field","index","recipe","factoryId","factory","entities","FactoryModules","moduleRankIds","factoryModuleIds","count","recipeModuleIds","Module","defaultModules","modules","generateModules","setFactoryModules","BeaconCount","beaconCount","setBeaconCount","Beacon","beaconId","setBeacon","BeaconModules","beaconModuleIds","Array","fill","beaconModuleId","setBeaconModules","Overclock","overclock","Math","max","min","setOverclock","original","ignoreItem","dispatch","IgnoreItemAction","setBelt","SetBeltAction","setWagon","SetWagonAction","SetFactoryAction","SetFactoryModulesAction","SetBeaconCountAction","SetBeaconAction","SetBeaconModulesAction","setBeaconTotal","SetBeaconTotalAction","SetOverclockAction","ResetItemAction","ResetRecipeAction","resetIgnores","ResetIgnoresAction","resetBelts","ResetBeltsAction","resetWagons","ResetWagonsAction","resetFactories","ResetFactoriesAction","resetBeacons","ResetBeaconsAction","SetDisabledRecipesAction","SetRecipeAction","selectors","viewQuery"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}